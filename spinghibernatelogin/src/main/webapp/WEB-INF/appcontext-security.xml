<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">


	<global-method-security secured-annotations="enabled"
		pre-post-annotations="enabled" />

	<http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint">

		<custom-filter position="FORM_LOGIN_FILTER"
			ref="customUsernamePasswordAuthenticationFilter" />

		<intercept-url pattern="/" access="hasRole('ROLE_USER')" />

		<intercept-url pattern="/welcome" access="hasRole('ROLE_USER')" />

		<intercept-url pattern="/loadMenuItem" access="hasRole('ROLE_ADMIN1')" />

		<!-- <form-login login-page="/login" default-target-url="/welcome" authentication-failure-url="/login?error" 
			username-parameter="username" password-parameter="password"/> -->


		<logout logout-success-url="/login?logout" />

		<session-management>
			<concurrency-control max-sessions="2"
				error-if-maximum-exceeded="true" />
		</session-management>

		<session-management invalid-session-url="/login">
			<concurrency-control expired-url="/login" />
		</session-management>


	</http>


	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg value="/login" />
	</beans:bean>


	<beans:bean id="customUsernamePasswordAuthenticationFilter"
		class="javaonline.login.service.CustomAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<!-- When user provides correct username/password and authentication is 
			successful -->
		<beans:property name="authenticationSuccessHandler"
			ref="authenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler"
			ref="authenticationFailureHandler" />

	</beans:bean>


	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsServiceImpl">
			<password-encoder ref="encoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="authenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/welcome" />
	</beans:bean>



	<!--<beans:bean id="authenticationSuccessHandler" class="javaonline.login.service.CustomWebAuthenticationDetailsSource"/> -->

	<beans:bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login?error" />
	</beans:bean>


	<beans:bean id="userDetailsServiceImpl"
		class="javaonline.login.service.UserDetailsServiceImpl"></beans:bean>


	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="11" />
	</beans:bean>
</beans:beans>